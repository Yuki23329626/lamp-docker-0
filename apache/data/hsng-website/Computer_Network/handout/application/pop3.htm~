<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>Post Office Protocol (POP3)</TITLE>
   <META NAME="GENERATOR" CONTENT="Mozilla/3.01Gold (Win95; I) [Netscape]">
</HEAD>
<BODY>

<CENTER><P><B><FONT SIZE=+2>Post Office Protocol (POP3)</FONT></B> 
<HR></P></CENTER>


<UL>
<LI>簡介 </LI>

<UL>
<P>一般而言，要維持與管理一個信息傳遞系統(message transport system, MTS)
是相當複雜的一件工作。所以許多工作站及個人電腦均希望可以收/送電子郵件，
但卻不用去維持與管理一個信息傳遞系統。為了解決這個問題，一個MTS伺服器可以
利用POP3這個協定來提供&quot;郵政信箱&quot;(maildrop)的服務給一些不想管MTS卻又想有郵件
服務的工作站及個人電腦。我們稱之為Mail Access Protocol (MAP)。
</P>
</UL>

<LI>基本運作 </LI>

<UL>
<LI>伺服器在TCP port 110上等客戶端連線。所以POP3假設傳輸層提供可靠的傳輸。
</LI>

<LI>POP3是定義在RFC1725 (November 1994)。 </LI>

<LI>POP運作時共分成三種狀態: AUTHORIZATION, TRANSACTION, UPDATE </LI>

<LI>Server回Client的回應中，如果是正常的回應則以&quot;+OK&quot;為起頭，不正常的回應則以&quot;-ERR&quot;為起頭。
</LI>

<LI>Server的回應如有含有一行以上，則會以一行只含有句點的特殊行做結束。(這跟SMTP用的方法一樣。)
</LI>
</UL>

<LI>AUTHORIZATION </LI>

<UL>
<LI>每當Client與Server連上後，便進入AUTHORIZATION狀態。此時Server會先回:
&quot;+OK POP3 server ready&quot; 或類似的回應。(以中正資工的Server而言，它是回:
&quot;+OK UCB Pop server (version 2.1.1) at cs starting.&quot;) </LI>

<LI>Client此時便可以利用 &quot;USER name&quot; 這個指令將使用者帳號告訴Server。如果Server上有此帳號，則會回:
&quot;+OK name is a valid mailbox&quot; 或類似的回應。(以中正資工的Server而言，它是回:
&quot;+OK Password required for name.&quot;)如果Server上無此帳號，則Server會回:
&quot;-ERR never heard of mailbox name&quot; 或類似的回應。(以中正資工的Server而言，它仍是回:
&quot;+OK Password required for name.&quot;) </LI>

<LI>再來Client便需以&quot;PASS string&quot;來回應使用者的密碼。如果密碼正確，Server便會回:
&quot;+OK maildrop locked and ready&quot; 或類似的回應。(以中正資工的Server而言，它是回:
&quot;+OK name has 1 message(s) (1101 octets).&quot;)若是密碼不對，Server會回:
&quot;-ERR invalid password&quot; 或類似的回應。(以中正資工的Server而言，它是回:
&quot;-ERR Password supplied for &quot;xxx&quot; is incorrect.&quot;) </LI>

<LI>若是一切無誤，POP便進入TRANSACTION狀態。此時若Client想離開，可以下
&quot;QUIT&quot; 指令。 </LI>

<LI>選擇性指令: 由以上描述可知，Client送密碼時，是以一般文字傳送，所以其保密性及安全性可以說是很差。
特別是像使用Netscape的mail工具時，它會每隔幾分鐘便去查一下mailbox，看有沒有新的信來。
如此，使用者的密碼便會每隔幾分鐘便在網路上出現一次。如果我們使用第一次project
寫的packet driver程式，很容昜就拿到別人的密碼了。為了保護密碼，POP3允許Client不用送密碼，
而以MD5 algorithm進行認證手續。支援此功能的POP3 Server在送第一個回應時，會含一個timestamp。Client則以
&quot;APOP name digest&quot; 指令回應。其中digest是以MD5 algorithm將timestamp及一Client保有的secret
key計算出的字串。Server核對無誤後，便可進入TRANSACTION狀態，省去送密碼的手續。
例如:
<UL>
S: +OK POP3 server ready <1896.697170952@dbc.mtview.ca.us>
C: APOP mrose c4c9334bac560ecc979e58001b3e22fb
S: +OK maildrop has 1 message (369 octets)

以上例子中，c4c9334bac560ecc979e58001b3e22fb是將字串 
"<1896.697170952@dbc.mtview.ca.us>tanstaaf"經MD5計算的結果。
"tanstaaf"就是client的secret key。
</ul>
</LI>
</UL>

<LI>TRANSACTION </LI>

<UL>
<LI>在此狀態下，Client 可以下五個指令及兩個選擇性指令: </LI>

<LI>STAT指令: Client 利用此指令可以知道mailbox中有多少封信及其大小。例如下此指令後，Server回:
&quot;+OK 2 1654&quot; 則表示有二封信，共1654 bytes。 </LI>

<LI>LIST [msg] 指令: Client利用此指令知道每一封信的大小。例如下 &quot;LIST&quot;，Server回
</LI>

<PRE>
            +OK 2 messages (1664 octets)
            1 1101 
            2 563 
            . 
</PRE>
<P>表示第一封信有1101 bytes，第二封信則有563 bytes。如果下 &quot;LIST 1&quot;，則Server回:
&quot;+OK 1 1101&quot;。 </P>

<LI>RETR msg指令: Client 利用此指令取得所指定的信。例如下 &quot;RETR 1&quot;便可取得第一封信。Server回應類似
</LI>

<PRE>
            +OK 1101 octets
            [message contents ...]
            .
</PRE>


<LI>DELE msg指令: Client 利用此指令刪除所指定的信。例如下 &quot;DELE 1&quot;便可刪除第一封信。Server以
&quot;+OK Message 1 has been deleted.&quot; 回應。但Server並不會馬上刪除，只是做上一個標記，等使用者下
&quot;QUIT&quot; 時才真的刪除。 </LI>

<LI>RSET指令: Client 利用此指令取消剛才的刪除指令。 </LI>

<LI>選擇性指令TOP msg n: Client 利用此指令可以取得所指定的信的內容前n行(mail
header不算在內)。 </LI>

<LI>選擇性指令UIDL [msg]: Client 利用此指令可以取得每一封信的唯一識別碼。
</LI>
</UL>
</UL>

<UL>
<LI>UPDATE </LI>

<UL>
<LI>使用下 &quot;QUIT&quot; 指令後，Server便進入此狀態，在完成刪除及其他相關動作後，便回
&quot;+OK Pop server at cs signing off.&quot; 並與Client斷線。 </LI>
</UL>

<LI> IMAP </LI>
<UL>
<P>
與POP3類似的另一個mail access protocol是Internet Mail Access Protocol (IMAP)
(RFC 1730)。IMAP比POP3功能較強，但也相對地較為複雜。在POP3中，當一session結
束時，server就不用保有任何state information。但在IMAP，server仍需維持某一
user上一次存取的狀態。IMAP比POP3多的功能包括

<LI> IMAP允許user從遠端對放在server的mail建立如樹狀檔案系統的管理方式，並對
某些檔案夾內的mail進行搜尋。
<LI> IMAP允許user在讀取mail時，只讀取一封mail的某一部份，如只讀header。這對
以低速連接網路的user有很大的幫助。如果一user以低速modem上網，他一定不想看別
人mail給他的一個2MB之圖片檔! 他可以只先看header，再決定是否看mail內容。
</UL>

</UL>

</BODY>
</HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE></TITLE>
   <META NAME="Author" CONTENT="">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0Gold (Win95; I) [Netscape]">
</HEAD>
<BODY BACKGROUND="../../gif/bg-slate.gif">

<UL>
<UL>
<UL>
<P><IMG SRC="title.gif" HEIGHT=59 WIDTH=340></P>
</UL>
</UL>
</UL>

<TABLE BGCOLOR="#FF0000" >
<TR>
<TD COLSPAN="3"><B><FONT COLOR="#FFFFFF"><FONT SIZE=+2>連線建立　　　　　　　　　　　　　　　　　　</FONT></FONT></B></TD>
</TR>
</TABLE>

<UL>
<P><FONT SIZE=+1>連線建立時，可以用 two-way handshake或three-way handshake</FONT></P>

<TABLE BGCOLOR="#0000FF" >
<TR>
<TD COLSPAN="3"><B><FONT COLOR="#FFFFFF"><FONT SIZE=+2>Two-way handshake</FONT></FONT></B></TD>
</TR>
</TABLE>

<P><FONT SIZE=+1>送端送出 connection request （ req_conn(<I>x</I>) ），並告訴收端第一個<BR>
packet 的 sequence number (<I>x</I>)。收端如果可以接收此連線則回一個<BR>
accept connection（acc_conn(<I>x</I>)）及回應第一個 packet 之 sequence<BR>
number。</FONT></P>
<FONT SIZE=+1></FONT></UL>

<P><IMG SRC="twoway.gif" HEIGHT=582 WIDTH=704></P>

<UL>
<P><FONT SIZE=+1>因第三層可能是不可靠傳輸，所以資料可能會遺失或重複。(1)
如<BR>
果是 acc_conn(y) 重複（或晚到），則收端在收到後發現 sequence<BR>
number 是 <I>y</I> 不是 <I>x</I>，就可以將他直接丟掉。如果是舊的資料晚到<BR>
，則因資料有 sequence number，所以可以知道是不對的資料。如<BR>
果送req_conn(<I>x</I>)沒有回應則在timeout後需再送一次。因req_conn(<I>x</I>)<BR>
有 sequence number，所以也可以判斷是否 req_conn(<I>x</I>) 有重送。</FONT></P>
<FONT SIZE=+1></FONT></UL>

<P><IMG SRC="twowayerr.gif" HEIGHT=627 WIDTH=656></P>

<UL>
<P><FONT SIZE=+1>Two-way handshake 的問題：delayed req_conn(<I>x</I>) 與
msg(<I>x</I>+1)</FONT></P>
<FONT SIZE=+1></FONT></UL>

<P><IMG SRC="twowaypro.gif" HEIGHT=489 WIDTH=588></P>

<UL>
<P><FONT SIZE=+1>解決方法：</FONT></P>

<P><FONT SIZE=+1>　　維持某一連線之資訊到連線結束後一段時 間 （ 即 到 舊
的<BR>
req_conn(<I>x</I>) 不會再出現）為止。</FONT></P>
<FONT SIZE=+1></FONT></UL>

<P><IMG SRC="2waycor.gif" HEIGHT=579 WIDTH=685></P>

<UL>
<TABLE BGCOLOR="#0000FF" >
<TR>
<TD COLSPAN="3"><B><FONT COLOR="#FFFFFF"><FONT SIZE=+2>Three-way handshake</FONT></FONT></B></TD>
</TR>
</TABLE>

<P><FONT SIZE=+1>　　送端送 req_conn(<I>x</I>)，送端收到後 ，除了回應接受外還要選<BR>
一個新的 sequence number <I>y</I> 做為收端回送 data 的起始號碼。也<BR>
就是收端回acc_conn(<I>x</I>+1, <I>y</I>)（其中 <I>x</I>+1表示預期送端下一個data<BR>
的 sequence number）。在送端收到 acc_conn(<I>x</I>+1, <I>y</I>) 後， 再
送<BR>
一確認訊息 confirm_conn(<I>x</I>+1, <I>y</I>+1)。以 TCP 為例：</FONT></P>
<FONT SIZE=+1></FONT><FONT SIZE=+1></FONT></UL>

<P><IMG SRC="3way1.gif" HEIGHT=317 WIDTH=634></P>

<P><IMG SRC="3way2.gif" HEIGHT=554 WIDTH=751></P>

</BODY>
</HTML>
